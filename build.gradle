plugins {
    id 'java'
    id 'distribution'
}

group 'net.adnre'
version '0.0.3pre'
project.ext.lwjglVersion = "3.2.3"
project.ext.lwjglNatives = "natives-windows"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-bgfx"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-nanovg"
    implementation "org.lwjgl:lwjgl-nuklear"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-par"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-vulkan"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
}
jar {
    manifest {
        attributes 'Main-Class': 'SpaceGame'
        attributes 'Class-Path': 'lib/lwjgl.jar lib/lwjgl-glfw.jar' +
                ' lib/lwjgl-natives-windows.jar lib/lwjgl-glfw-natives-windows.jar' +
                ' lib/lwjgl-opengl-natives-windows.jar lib/lwjgl-opengl.jar'
    }
    from {
        configurations.compile.collect {
            it.isDirectory()? it: zipTree(it)
        }
    }
}

task copyRuntimeLibs(type: Copy) {
    into "build/libs/lib"
    from configurations.testRuntime - configurations.runtime
}
distributions {
    main {
        contents {
            from jar // copies your jar
            from(project.configurations.runtime) // copies dependency jars
        }
    }
}
task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'SpaceGame'
    }
    baseName = 'all-in-one-jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
